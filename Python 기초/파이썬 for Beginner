### 1장

- 파이썬의 창시자 : 귀도 반 로섬
- 파이썬은 스크립트 언어 = 인터프리터 언어
- 코드를 한 줄씩 읽어 실행되어 별도의 실행 파일이 생성되지 않는다
- `IDLE` : 대화형 모드 → 변수를 memory상에 저장하기 때문에 프로그램 재시작시 없어진다
- `pycharm` : 스크립트 모드

### 2장

- 파이썬 변수는 영문자 또는 _ 로 시작해야 한다
- 정수형, 실수형, bool형, 문자형 등 4가지 종류의 데이터 타입 존재
- `int()` → 정수형으로 바꿔주는 함수

### 3장

- 데이터 출력

    ```python
    # print()
    print(str)
    print("%d %d" % (100, 100))
    	# 정수형과 실수형은 호환가능 -> 주의
    # %형식지정자
    print("%d" % 123)    # 123
    print("%10d" % 123)  # () 123 -> 공백 123 포함해서 10자리
    print("%010d" % 123) # (0) 123 -> 0 123 포함해서 10자리
    print("%f" % 3.141592)    #
    print("%5.1f" % 3.141592) #
    ```

- 아스키코드와 char 사이의 변환

    ```python
    # ascii to char
    chr(65) # 'A'
    chr(66) # 'B'
    # char to ascii
    ord('a') # 97
    ord('파') # 54028
    # 응용
    chr(ord('파') + 10) # 팙 -> 암호화방식
    ```

### 4장 연산자

- 입력받은 수의 홀수와 짝수 구분하기
- 동전 교환 프로그램 (500, 100, 50, 10)

### 5장 조건문

- 삼항연산자

    ```python
    res = num%2==0? 짝수; 홀수 # 다시확인하기
    ```

- 랜덤하게 0~9까지 숫자를 30개 생성하고, 뽑히지 않은 숫자가 있으면 출력

### 6장 반복문

- 1부터 100까지 중 3의 배수의 합계
- 1부터 100까지 합계를 내라. 단 5의배수는 더하지 않는다

### 7장 리스트, 튜플, 딕셔너리

- 3x4 2차원 배열을 -1로 초기화 시키기. 2중 for문 사용하기.
- `[]` 리스트
- `()` 튜플
    - 읽기 전용
- `{}` 딕셔너리
    - key value의 쌍으로 이루어짐
- 세트 {}
    - 딕셔너리의 특수한 형태, 딕셔너리의 키만 있는 형태
    - 값이 중복될 수 없다
    - CODE
    - 간단하게 중복을 제거하는 방법 ( list to set → set to llist )

### 9장 함수

- `def` 명령어로 선언
- `parameter` 를 0개에서 무한개까지 가질 수 있다
- `return` 문을 사용하여 값을 반환한다 ( 대부분 제일 마지막에 나온다)
- 함수의 호출은 `함수이름()` 을 사용한다
    - callback 함수인 경우 `함수이름` 만 사용한다
- 전역 / 지역 변수
    - 각각 지역변수와 전역변수의 차이가 있다
    - 이때, 전역변수를 표시하기 위해서 `global` 표시를 해준다
    - CODE

### 11장 파일입출력

- 파일을 읽기 시작하면 순차적으로 읽는다
- readline() 을 한번 사용하면 그다음에는 다음줄부터 읽어들인다
- CODE

### 13장 데이터베이스

- DB연동 순서
    - connect → cursor → execute → commit → close
